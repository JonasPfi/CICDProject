name: Aufgabe1

on:
  push:
    branches: ["main"]
  pull_request:
    types:
      - opened
    branches: ["main"]
jobs:
      
  unit_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout_code
        uses: actions/checkout@v3

      - name: install_go
        run: sudo apt install golang-go

      - name: build 
        run: |
          cd frontend
          npm ci
          npx ng build
          cp -r dist/frontend/browser ../backend/cmd/strichliste/frontendDist
      - name: run_tests
        run: |
          cd backend
          go test ./... -coverprofile=coverage.out && go tool cover -html=coverage.out -o coverage.html
        
      - name: Setup SSH
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          mkdir ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed5519
          ssh-add ~/.ssh/id_ed5519
          ssh-keyscan -H dhbw.hoenle.xyz > ~/.ssh/known_hosts
        env:
          SSH_AUTH_STOCK: /tmp/ssh_agent.sock
  check_format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout_code
        uses: actions/checkout@v3
      
      - name: apply_code_format
        run: |
          gofmt -w ./backend
          cd frontend; npx prettier --write .
      
      - name: check_code_format
        run: |
          gofmt -l ./backend
          cd frontend; npx prettier --check .
        
      - name: chech_code_format_in_CI_pipeline
        run: |
          files=$(gofmt -l ./backend) && [ -z "$files" ]

